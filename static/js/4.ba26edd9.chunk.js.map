{"version":3,"sources":["containers/film-details/styles.js","containers/film-details/Skeleton.js","containers/film-details/Details.js","containers/film-details/FilmDetails.js","modules/film-details/fetchFimsDetails.js","api/film-details/filmDetailsConfig.js","hooks/useLazyBackground.js","hooks/useDebounceValue.js","assets/images/a-new-hope-cover.jpeg","assets/images/the-empire-strikes-back-cover.jpeg","assets/images/return-of-the-jedi-cover.png","assets/images/the-phantom-menace-cover.jpg","assets/images/attack-of-the-clones-cover.jpg","assets/images/revenge-of-the-sith-cover.jpeg","assets/images/star-wars-cover.jpg","components/background-wrap/styles.js","components/background-wrap/BackgroundWrap.js","assets/icons/logo-icon.svg","components/header/styles.js","components/header/Header.js"],"names":["Container","styled","div","breakpoints","mobile","largeDesktop","DetailsWrap","Title","h4","theme","font","weight","black","size","largeTitle","colors","text","white","title","SkeletonTheme","SkeletonThemeSource","attrs","color","skeleton","highlightColor","highlight","TitleSkeleton","Skeleton","isMobile","height","width","Wrap","Episode","background","regular","label","gray","EM","em","ReleaseDate","green","InfoSkeleton","OpeningCrawl","p","SkeletonWrap","TextSkeleton","Author","medium","smallLabel","SearchLink","red","Link","blue","Label","span","memo","onMobile","ErrorMessage","to","routes","home","Details","details","loading","error","addFilmToSearchHistory","useContext","SearchHistoryContext","id","episode_id","opening_crawl","director","producer","release_date","useEffect","formatDate","defaultProps","PropTypes","object","isRequired","bool","string","FilmDetails","query","URLSearchParams","useLocation","search","useState","filmDetails","setFilmsDetails","setLoading","setError","get","request","axios","CancelToken","source","token","method","url","cancelToken","filmDetailsConfig","then","data","catch","logger","isCancel","fetchFilmDetails","finally","cancel","imageId","useLazyBackground","imageUrl","src","setSrc","img","Image","onload","useDebounceValue","value","delay","debounceValue","setDebounceValue","typing","setTyping","timer","setTimeout","clearTimeout","trimString","filter","StarWarsCover","ANewHopeCover","TheEmpireStrikesBackCover","ReturnOfTheJediCover","ThePhantomMenaceCover","AttackOfTheClonesCover","RevengeOfTheSithCover","getBackgroundImage","BackgroundWrap","children","Logo","LogoIcon","Icon","LogoIconSvg","Header","className"],"mappings":"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","file":"static/js/4.ba26edd9.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Skeleton, {\n  SkeletonTheme as SkeletonThemeSource,\n} from \"react-loading-skeleton\";\n\nimport { breakpoints } from \"@styles\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-rows: 10.975em auto;\n  max-width: 75em;\n  margin: 0 auto;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    width: 90vw;\n    align-self: center;\n  }\n\n  @media only screen and (min-width: ${breakpoints.largeDesktop}) {\n    width: 75em;\n  }\n`;\n\nexport const DetailsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 5em;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    margin-left: 0.3em;\n    width: 90vw;\n    margin-bottom: 3em;\n  }\n`;\n\nexport const Title = styled.h4`\n  font-weight: ${({ theme: { font } }) => font.weight.black};\n  font-size: ${({ theme: { font } }) => font.size.largeTitle};\n  letter-spacing: 0.05em;\n  color: ${({ theme: { colors } }) => colors.text.white};\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    font-size: ${({ theme: { font } }) => font.size.title};\n    margin-bottom: 0.3em;\n  }\n`;\n\nexport const SkeletonTheme = styled(SkeletonThemeSource).attrs(\n  ({ theme: { colors } }) => ({\n    color: colors.skeleton.color,\n    highlightColor: colors.skeleton.highlight,\n  })\n)``;\n\nexport const TitleSkeleton = styled(Skeleton).attrs(({ isMobile }) =>\n  isMobile\n    ? { height: \"8.65em\" }\n    : {\n        width: \"45em\",\n        height: \"2.65em\",\n      }\n)`\n  margin-bottom: 2em;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 1em;\n  margin-bottom: 1em;\n`;\n\nexport const Episode = styled.div`\n  border: 1px solid ${({ theme: { colors } }) => colors.background.white};\n  font-weight: ${({ theme: { font } }) => font.weight.regular};\n  font-size: ${({ theme: { font } }) => font.size.label};\n  letter-spacing: 0.05em;\n  color: ${({ theme: { colors } }) => colors.text.gray};\n  padding: 0.1em 1em;\n  margin-right: 0.8em;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    font-size: ${({ theme: { font } }) => font.size.mobile.label};\n    width: 9.5em;\n  }\n`;\n\nexport const EM = styled.em``;\n\nexport const ReleaseDate = styled.div`\n  font-size: ${({ theme: { font } }) => font.size.label};\n  letter-spacing: 0.05em;\n  color: ${({ theme: { colors } }) => colors.text.green};\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    font-size: ${({ theme: { font } }) => font.size.mobile.label};\n  }\n`;\n\nexport const InfoSkeleton = styled(Skeleton).attrs(({ isMobile }) =>\n  isMobile\n    ? { height: \"0.95em\" }\n    : {\n        width: \"28em\",\n        height: \"1.25em\",\n      }\n)`\n  margin-bottom: 1em;\n`;\n\nexport const OpeningCrawl = styled.p`\n  display: flex;\n  flex-direction: column;\n  max-width: 60em;\n  font-weight: ${({ theme: { font } }) => font.weight.regular};\n  font-size: ${({ theme: { font } }) => font.size.text};\n  letter-spacing: 0.05em;\n  color: ${({ theme: { colors } }) => colors.text.white};\n  white-space: pre-line;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    font-size: ${({ theme: { font } }) => font.size.mobile.text};\n  }\n`;\n\nexport const SkeletonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5em;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    margin-bottom: 2.5em;\n  }\n`;\n\nexport const TextSkeleton = styled(Skeleton).attrs(({ isMobile }) =>\n  isMobile\n    ? { width: \"15em\", height: \"0.65em\" }\n    : {\n        width: \"25em\",\n        height: \"0.85em\",\n      }\n)`\n  margin-top: 0.25em;\n  margin-bottom: 0.25em;\n`;\n\nexport const Author = styled.div`\n  border: 1px solid ${({ theme: { colors } }) => colors.background.gray};\n  font-weight: ${({ theme: { font } }) => font.weight.medium};\n  font-size: ${({ theme: { font } }) => font.size.smallLabel};\n  letter-spacing: 0.05em;\n  color: ${({ theme: { colors } }) => colors.text.gray};\n  padding: 0.05em 0.5em;\n  margin-right: 0.5em;\n\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    font-size: ${({ theme: { font } }) => font.size.mobile.label};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  text-align: center;\n  color: ${({ theme: { colors } }) => colors.text.red};\n  max-width: 20em;\n`;\n\nexport const SearchLink = styled(Link)`\n  color: ${({ theme: { colors } }) => colors.text.blue};\n`;\n\nexport const Label = styled.span`\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    display: block;\n    font-size: ${({ theme: { font } }) => font.size.mobile.label};\n  }\n`;\n","import React, { memo } from \"react\";\n\nimport { isMobile } from \"@helpers\";\n\nimport {\n  DetailsWrap,\n  InfoSkeleton,\n  SkeletonWrap,\n  TextSkeleton,\n  TitleSkeleton,\n  SkeletonTheme,\n} from \"./styles\";\n\nconst Skeleton = memo(() => {\n  const onMobile = isMobile();\n\n  return (\n    <SkeletonTheme>\n      <DetailsWrap>\n        <TitleSkeleton isMobile={onMobile} />\n        <InfoSkeleton isMobile={onMobile} />\n        <SkeletonWrap>\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n        </SkeletonWrap>\n        <SkeletonWrap>\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n        </SkeletonWrap>\n        <SkeletonWrap>\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n          <TextSkeleton isMobile={onMobile} />\n        </SkeletonWrap>\n        <InfoSkeleton isMobile={onMobile} />\n      </DetailsWrap>\n    </SkeletonTheme>\n  );\n});\n\nexport default Skeleton;\n","import React, { useEffect, useContext, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SearchHistoryContext } from \"@contexts/search-history\";\nimport { formatDate } from \"@helpers\";\nimport { routes } from \"@enums\";\nimport Skeleton from \"./Skeleton\";\n\nconst ErrorMessage = memo(() => (\n  <ErrorMessage>\n    Something went wrong trying to load the page :( click{\" \"}\n    <SearchLink to={routes.home}>here</SearchLink> to search for a film or\n    reload the page if that does not work\n  </ErrorMessage>\n));\n\nimport {\n  Author,\n  DetailsWrap,\n  EM,\n  Episode,\n  OpeningCrawl,\n  ReleaseDate,\n  Title,\n  Wrap,\n  SearchLink,\n  Label,\n} from \"./styles\";\n\nconst Details = ({ details, loading, error }) => {\n  const { addFilmToSearchHistory } = useContext(SearchHistoryContext);\n\n  const {\n    id,\n    title,\n    episode_id,\n    opening_crawl,\n    director,\n    producer,\n    release_date,\n  } = details || {};\n\n  useEffect(() => {\n    id && title && addFilmToSearchHistory({ id, title });\n  }, [id, title]);\n\n  if (loading) return <Skeleton />;\n\n  if (error) return <ErrorMessage />;\n\n  return (\n    <DetailsWrap>\n      <Title>\n        <Label>Star Wars: </Label>\n        {title}\n      </Title>\n      <Wrap>\n        <Episode>{`Episode ${episode_id}`}</Episode>\n        <ReleaseDate>\n          <EM>{`released: ${formatDate(release_date)}`}</EM>\n        </ReleaseDate>\n      </Wrap>\n      <OpeningCrawl>{opening_crawl}</OpeningCrawl>\n      <Wrap>\n        <Author>{`Prod: ${producer}`}</Author>\n        <Author>{`Dir: ${director}`}</Author>\n      </Wrap>\n    </DetailsWrap>\n  );\n};\n\nDetails.defaultProps = {\n  details: {},\n  loading: false,\n  error: \"\",\n};\n\nDetails.defaultProps = {\n  details: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default Details;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { fetchFilmDetails } from \"@modules/film-details\";\nimport { axios } from \"@helpers\";\nimport BackgroundWrap from \"@components/background-wrap\";\nimport Header from \"@components/header\";\nimport Details from \"./Details\";\n\nimport { Container } from \"./styles\";\n\nconst FilmDetails = () => {\n  const useQuery = () => new URLSearchParams(useLocation().search);\n  const query = useQuery();\n\n  const [filmDetails, setFilmsDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const id = query.get(\"id\");\n\n  useEffect(() => {\n    const request = axios.CancelToken.source();\n    setLoading(true);\n\n    fetchFilmDetails(id, request.token)\n      .then((details) => {\n        setFilmsDetails(details);\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    return () => {\n      request.cancel(\"cancel pending request\");\n    };\n  }, []);\n\n  const details = { id, ...filmDetails };\n\n  return (\n    <BackgroundWrap imageId={id}>\n      <Container>\n        <Header />\n        {<Details details={details} loading={loading} error={error} />}\n      </Container>\n    </BackgroundWrap>\n  );\n};\n\nexport default FilmDetails;\n","import { axios, logger } from \"@helpers\";\nimport { filmDetailsConfig } from \"@api/film-details\";\n\nexport function fetchFilmDetails(id, token) {\n  return axios(filmDetailsConfig(id, token))\n    .then(({ data }) => data)\n    .catch((error) => {\n      logger(error);\n      if (axios.isCancel(error)) {\n        return;\n      } else {\n        return \"something went worng\";\n      }\n    });\n}\n","export const filmDetailsConfig = (id, token) => ({\n  method: \"get\",\n  url: \"/films/\" + id,\n  cancelToken: token,\n});\n","import { useState, useEffect } from \"react\";\n\nexport const useLazyBackground = (imageUrl) => {\n  const [src, setSrc] = useState(\"\");\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageUrl;\n    img.onload = () => setSrc(imageUrl);\n  }, [src]);\n\n  return src;\n};\n","import { useState, useEffect } from \"react\";\n\nimport { trimString } from \"@helpers\";\n\nexport const useDebounceValue = (value, delay) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n  const [typing, setTyping] = useState(false);\n\n  useEffect(() => {\n    setTyping(true);\n    const timer = setTimeout(() => {\n      setDebounceValue(value);\n      setTyping(false);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value]);\n\n  return [trimString(debounceValue), typing];\n};\n","export default __webpack_public_path__ + \"static/media/a-new-hope-cover.117f6e25.jpeg\";","export default __webpack_public_path__ + \"static/media/the-empire-strikes-back-cover.4687aa4a.jpeg\";","export default __webpack_public_path__ + \"static/media/return-of-the-jedi-cover.1cd18821.png\";","export default __webpack_public_path__ + \"static/media/the-phantom-menace-cover.4724211b.jpg\";","export default __webpack_public_path__ + \"static/media/attack-of-the-clones-cover.2c6fd86a.jpg\";","export default __webpack_public_path__ + \"static/media/revenge-of-the-sith-cover.b300a8c1.jpeg\";","export default __webpack_public_path__ + \"static/media/star-wars-cover.92443883.jpg\";","import styled from \"styled-components\";\n\nimport ANewHopeCover from \"@assets/images/a-new-hope-cover.jpeg\";\nimport TheEmpireStrikesBackCover from \"@assets/images/the-empire-strikes-back-cover.jpeg\";\nimport ReturnOfTheJediCover from \"@assets/images/return-of-the-jedi-cover.png\";\nimport ThePhantomMenaceCover from \"@assets/images/the-phantom-menace-cover.jpg\";\nimport AttackOfTheClonesCover from \"@assets/images/attack-of-the-clones-cover.jpg\";\nimport RevengeOfTheSithCover from \"@assets/images/revenge-of-the-sith-cover.jpeg\";\nimport StarWarsCover from \"@assets/images/star-wars-cover.jpg\";\nimport { useLazyBackground } from \"@/hooks\";\n\nconst getBackgroundImage = (imageId = 0) => {\n  switch (imageId) {\n    case \"0\":\n      return StarWarsCover;\n    case \"1\":\n      return ANewHopeCover;\n    case \"2\":\n      return TheEmpireStrikesBackCover;\n    case \"3\":\n      return ReturnOfTheJediCover;\n    case \"4\":\n      return ThePhantomMenaceCover;\n    case \"5\":\n      return AttackOfTheClonesCover;\n    case \"6\":\n      return RevengeOfTheSithCover;\n    default:\n      return;\n  }\n};\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  z-index: 1;\n\n  &::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: \"\";\n    width: 100vw;\n    height: 100vh;\n    background-color: ${({ theme: { colors } }) => colors.background.gray};\n    background: ${({ theme: { colors } }) => colors.background.filter},\n      ${({ imageId }) =>\n        `url(${useLazyBackground(getBackgroundImage(imageId) || \"\")})`};\n    background-size: cover;\n    background-repeat: no-repeat;\n    z-index: -1;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Container } from \"./styles\";\n\nconst BackgroundWrap = ({ imageId, children }) => (\n  <Container imageId={imageId}>{children}</Container>\n);\n\nBackgroundWrap.defaultProps = {\n  imageId: \"0\",\n};\n\nBackgroundWrap.propTypes = {\n  imageId: PropTypes.string.isRequired,\n};\n\nexport default BackgroundWrap;\n","export default __webpack_public_path__ + \"static/media/logo-icon.858ff212.svg\";","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport { breakpoints } from \"@styles\";\nimport Icon from \"@components/icon\";\nimport LogoIconSvg from \"@assets/icons/logo-icon.svg\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  @media only screen and (max-width: ${breakpoints.largeDesktop}) {\n    justify-content: center;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const LogoIcon = styled(Icon).attrs({\n  src: LogoIconSvg,\n})`\n  @media only screen and (max-width: ${breakpoints.mobile}) {\n    svg {\n      width: 8.5em;\n    }\n  }\n\n  margin-left: -0.5em;\n`;\n","import React, { memo } from \"react\";\n\nimport { routes } from \"@enums\";\n\nimport { Container, Logo, LogoIcon } from \"./styles\";\n\nconst Header = memo(({ className }) => {\n  return (\n    <Container className={className}>\n      <Logo to={routes.home}>\n        <LogoIcon />\n      </Logo>\n    </Container>\n  );\n});\n\nexport default Header;\n"],"sourceRoot":""}